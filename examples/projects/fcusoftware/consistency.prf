(consistency
 (CONSISTENCY 0
  (CONSISTENCY-1 nil 3695039810
   ("" (skosimp*)
    (("" (prop)
      (("1" (comment "induction base")
        (("1" (grind :if-match nil) nil ";;; induction base")) nil)
       ("2" (comment "inductive step")
        (("2" (expand "trans")
          (("2" (expand "per_click_hPa")
            (("2" (prop)
              (("1" (grind :if-match nil) nil nil)
               ("2" (grind :if-match nil) nil nil)
               ("3" (grind :if-match nil) nil nil)
               ("4" (grind :if-match nil) nil nil)
               ("5" (grind :if-match nil) nil nil)
               ("6" (grind :if-match nil) nil nil)
               ("7" (grind :if-match nil) nil nil)
               ("8" (grind :if-match nil) nil nil)
               ("9" (grind :if-match nil) nil nil)
               ("10" (grind :if-match nil) nil nil)
               ("11" (grind :if-match nil) nil nil)
               ("12" (grind :if-match nil) nil nil)
               ("13" (grind :if-match nil) nil nil)
               ("14" (grind :if-match nil) nil nil)
               ("15" (grind :if-match nil) nil nil)
               ("16" (grind :if-match nil) nil nil)
               ("17" (grind :if-match nil) nil nil)
               ("18" (grind :if-match nil) nil nil)
               ("19" (grind :if-match nil) nil nil)
               ("20" (grind :if-match nil) nil nil)
               ("21" (grind :if-match nil) nil nil)
               ("22" (grind :if-match nil) nil nil))
              nil))
            nil))
          ";;; inductive step"))
        nil))
      nil))
    nil)
   ((posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posrat_times_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (consistency const-decl "bool" consistency nil)
    (click_hPa const-decl "State" emucharts_fcusoftware nil)
    (enter_into const-decl "State" emucharts_fcusoftware nil)
    (trim const-decl "real" FCUDataEntry nil)
    (STD_HPA const-decl "double" FCUDataEntry nil)
    (leave_state const-decl "State" emucharts_fcusoftware nil)
    (per_click_hPa const-decl "bool" emucharts_fcusoftware nil)
    (init? const-decl "bool" consistency nil)
    (init const-decl "State" emucharts_fcusoftware nil)
    (double2string const-decl "string" limits nil)
    (concat const-decl "string" stdstr nil)
    (O const-decl "finseq" finite_sequences nil)
    (list2finseq const-decl "finseq[T]" list2finseq nil)
    (length def-decl "nat" list_props nil)
    (STD_INHG const-decl "double" FCUDataEntry nil)
    (MAX_ELAPSE const-decl "int" emucharts_fcusoftware nil)
    (trans const-decl "bool" consistency nil)
    (per_click_CLR const-decl "bool" emucharts_fcusoftware nil)
    (clear_data_entry const-decl "state" FCUDataEntry nil)
    (processKey const-decl "state" FCUDataEntry nil)
    (click_CLR const-decl "State" emucharts_fcusoftware nil)
    (/= const-decl "boolean" notequal nil)
    (guard const-decl "bool" consistency nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (per_click_digit_0 const-decl "bool" emucharts_fcusoftware nil)
    (MAX_INTEGER_DIGITS const-decl "int" constants nil)
    (MAX_DECIMAL_DIGITS const-decl "int" constants nil)
    (KEY_CODE_TO_INT const-decl "int" constants nil)
    (MAIN_DISPLAY_SIZE const-decl "int" constants nil)
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (nth def-decl "T" list_props nil)
    (snprintf const-decl "{s: string | s`length < MAX_LEN}" limits nil)
    (messageID_TO_INT const-decl "int" constants nil)
    (message const-decl "{s: string | s`length <= MAIN_DISPLAY_SIZE}"
     constants nil)
    (MIN_inHg const-decl "double" constants nil)
    (MAX_inHg const-decl "double" constants nil)
    (MIN_hPa const-decl "double" constants nil)
    (MAX_hPa const-decl "double" constants nil)
    (dispmsg const-decl "string" FCUDataEntry nil)
    (click_digit const-decl "state" FCUDataEntry nil)
    (click_digit_0 const-decl "State" emucharts_fcusoftware nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (pow10 def-decl "real" limits nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (per_click_digit_1 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_1 const-decl "State" emucharts_fcusoftware nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (per_click_digit_2 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_2 const-decl "State" emucharts_fcusoftware nil)
    (per_click_digit_3 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_3 const-decl "State" emucharts_fcusoftware nil)
    (per_click_digit_4 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_4 const-decl "State" emucharts_fcusoftware nil)
    (per_click_digit_5 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_5 const-decl "State" emucharts_fcusoftware nil)
    (per_click_digit_6 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_6 const-decl "State" emucharts_fcusoftware nil)
    (per_click_digit_7 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_7 const-decl "State" emucharts_fcusoftware nil)
    (per_click_digit_8 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_8 const-decl "State" emucharts_fcusoftware nil)
    (per_click_digit_9 const-decl "bool" emucharts_fcusoftware nil)
    (click_digit_9 const-decl "State" emucharts_fcusoftware nil)
    (per_click_editbox_pressure const-decl "bool" emucharts_fcusoftware
     nil)
    (click_editbox_pressure const-decl "State" emucharts_fcusoftware
     nil)
    (per_click_ESC const-decl "bool" emucharts_fcusoftware nil)
    (restore_display const-decl "state" FCUDataEntry nil)
    (click_ESC const-decl "State" emucharts_fcusoftware nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (per_click_inHg const-decl "bool" emucharts_fcusoftware nil)
    (click_inHg const-decl "State" emucharts_fcusoftware nil)
    (per_click_OK const-decl "bool" emucharts_fcusoftware nil)
    (validate_data_entry const-decl "state" FCUDataEntry nil)
    (click_OK const-decl "State" emucharts_fcusoftware nil)
    (per_click_point const-decl "bool" emucharts_fcusoftware nil)
    (strcat const-decl "string" limits nil)
    (click_POINT const-decl "state" FCUDataEntry nil)
    (click_point const-decl "State" emucharts_fcusoftware nil)
    (per_click_QNH_RADIO const-decl "bool" emucharts_fcusoftware nil)
    (click_QNH_RADIO const-decl "State" emucharts_fcusoftware nil)
    (per_click_STD_RADIO const-decl "bool" emucharts_fcusoftware nil)
    (click_STD_RADIO const-decl "State" emucharts_fcusoftware nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (per_tick const-decl "bool" emucharts_fcusoftware nil)
    (processEvent const-decl "state" FCUDataEntry nil)
    (tick const-decl "State" emucharts_fcusoftware nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak)))

