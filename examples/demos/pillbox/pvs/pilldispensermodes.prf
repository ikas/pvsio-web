(pilldispenser_th
 (next_pid_TCC1 0
  (next_pid_TCC1-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (next_mid_TCC1 0
  (next_mid_TCC1-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (mlimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (patient_list_screen_TCC1 0
  (patient_list_screen_TCC1-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((plimit const-decl "posnat" pd_t_and_c_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (patient_list_screen_TCC2 0
  (patient_list_screen_TCC2-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (script_list_screen_TCC1 0
  (script_list_screen_TCC1-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((slimit const-decl "posnat" pd_t_and_c_th nil)) nil))
 (script_list_screen_TCC2 0
  (script_list_screen_TCC2-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (slimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (new_script_details_screen_TCC1 0
  (new_script_details_screen_TCC1-1 nil 3697451072
   ("" (subtype-tcc) nil nil)
   ((slimit const-decl "posnat" pd_t_and_c_th nil)) nil))
 (new_script_details_screen_TCC2 0
  (new_script_details_screen_TCC2-1 nil 3697451072
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil)
    (slimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (db_med_list_screen_TCC1 0
  (db_med_list_screen_TCC1-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((mlimit const-decl "posnat" pd_t_and_c_th nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (db_med_list_screen_TCC2 0
  (db_med_list_screen_TCC2-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (mlimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (scan_screen_TCC1 0
  (scan_screen_TCC1-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (pred type-eq-decl nil defined_types nil)
    (total_order? const-decl "bool" orders nil)
    (<= const-decl "bool" reals nil)
    (odd? const-decl "bool" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (> const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (even? const-decl "bool" integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (strict_total_order? const-decl "bool" orders nil)
    (irreflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (strict_order? const-decl "bool" orders nil)
    (trichotomous? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil))
   nil))
 (act_key2_TCC1 0
  (act_key2_TCC1-1 nil 3697451072 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (per_act_key2 const-decl "boolean" pilldispenser_th nil))
   nil))
 (act_key3_TCC1 0
  (act_key3_TCC1-1 nil 3697451072 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (per_act_key3 const-decl "boolean" pilldispenser_th nil))
   nil))
 (act_confirm_TCC1 0
  (act_confirm_TCC1-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((max_scan const-decl "posnat" pd_t_and_c_th nil)) nil))
 (act_confirm_TCC2 0
  (act_confirm_TCC2-1 nil 3697451072 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (per_act_confirm const-decl "boolean" pilldispenser_th nil)
    (/= const-decl "boolean" notequal nil)
    (XOR const-decl "bool" xor_def nil))
   nil))
 (act_create_TCC1 0
  (act_create_TCC1-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (per_act_create const-decl "boolean" pilldispenser_th nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (slimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (act_create_TCC2 0
  (act_create_TCC2-1 nil 3697451072 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (per_act_create const-decl "boolean" pilldispenser_th nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (/= const-decl "boolean" notequal nil)
    (XOR const-decl "bool" xor_def nil)
    (slimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (act_create_TCC3 0
  (act_create_TCC3-1 nil 3697451072 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (per_act_create const-decl "boolean" pilldispenser_th nil)
    (/= const-decl "boolean" notequal nil)
    (XOR const-decl "bool" xor_def nil))
   nil))
 (act_quit_TCC1 0
  (act_quit_TCC1-1 nil 3697451072 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (per_act_quit const-decl "boolean" pilldispenser_th nil))
   nil))
 (act_TCC1 0
  (act_TCC1-1 nil 3697451072 ("" (cond-disjoint-tcc) nil nil)
   ((per_act_key1 const-decl "boolean" pilldispenser_th nil)
    (per_act_key2 const-decl "boolean" pilldispenser_th nil)
    (per_act_key3 const-decl "boolean" pilldispenser_th nil)
    (per_act_medicines const-decl "boolean" pilldispenser_th nil)
    (per_act_prescriptions const-decl "boolean" pilldispenser_th nil)
    (per_act_create const-decl "boolean" pilldispenser_th nil)
    (/= const-decl "boolean" notequal nil)
    (per_act_confirm const-decl "boolean" pilldispenser_th nil)
    (per_act_quit const-decl "boolean" pilldispenser_th nil))
   nil))
 (scroll_up_patient_list_TCC1 0
  (scroll_up_patient_list_TCC1-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (odd? const-decl "bool" integers nil)
    (even? const-decl "bool" integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (scroll_up_patient_list_TCC2 0
  (scroll_up_patient_list_TCC2-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (odd? const-decl "bool" integers nil)
    (even? const-decl "bool" integers nil)
    (frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (scroll_down_patient_list_TCC1 0
  (scroll_down_patient_list_TCC1-1 nil 3697451072
   ("" (subtype-tcc) nil nil)
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (scroll_down_patient_list_TCC2 0
  (scroll_down_patient_list_TCC2-1 nil 3697451072
   ("" (subtype-tcc) nil nil)
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (scroll_up_med_list_TCC1 0
  (scroll_up_med_list_TCC1-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (mlimit const-decl "posnat" pd_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (odd? const-decl "bool" integers nil)
    (even? const-decl "bool" integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (scroll_up_med_list_TCC2 0
  (scroll_up_med_list_TCC2-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (mlimit const-decl "posnat" pd_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (odd? const-decl "bool" integers nil)
    (even? const-decl "bool" integers nil)
    (frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (scroll_down_med_list_TCC1 0
  (scroll_down_med_list_TCC1-1 nil 3697451072
   ("" (subtype-tcc) nil nil)
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (mlimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (scroll_down_med_list_TCC2 0
  (scroll_down_med_list_TCC2-1 nil 3697451072
   ("" (subtype-tcc) nil nil)
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (mlimit const-decl "posnat" pd_t_and_c_th nil))
   nil))
 (scroll_up_script_list_TCC1 0
  (scroll_up_script_list_TCC1-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (slimit const-decl "posnat" pd_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (odd? const-decl "bool" integers nil)
    (even? const-decl "bool" integers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (scroll_up_script_list_TCC2 0
  (scroll_up_script_list_TCC2-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (slimit const-decl "posnat" pd_t_and_c_th nil)
    (<= const-decl "bool" reals nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (odd? const-decl "bool" integers nil)
    (even? const-decl "bool" integers nil)
    (frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (partial_order? const-decl "bool" orders nil)
    (dichotomous? const-decl "bool" orders nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (scroll_down_script_list_TCC1 0
  (scroll_down_script_list_TCC1-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (slimit const-decl "posnat" pd_t_and_c_th nil)
    (odd? const-decl "bool" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (<= const-decl "bool" reals nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil)
    (script_patient_type type-eq-decl nil pd_t_and_c_th nil)
    (list_script_type type-eq-decl nil pd_t_and_c_th nil)
    (even? const-decl "bool" integers nil)
    (< const-decl "bool" reals nil)
    (strict_total_order? const-decl "bool" orders nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (dichotomous? const-decl "bool" orders nil)
    (partial_order? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (trichotomous? const-decl "bool" orders nil)
    (strict_order? const-decl "bool" orders nil)
    (transitive? const-decl "bool" relations nil)
    (irreflexive? const-decl "bool" relations nil))
   nil))
 (scroll_down_script_list_TCC2 0
  (scroll_down_script_list_TCC2-1 nil 3697451072
   ("" (skosimp*) (("" (all-typepreds) (("" (grind) nil nil)) nil))
    nil)
   ((nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (slimit const-decl "posnat" pd_t_and_c_th nil)
    (odd? const-decl "bool" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (available_actions_type type-eq-decl nil pd_t_and_c_th nil)
    (available_fields_type type-eq-decl nil pd_t_and_c_th nil)
    (med_db_type type-eq-decl nil pd_t_and_c_th nil)
    (med_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (mode_type type-decl nil pd_t_and_c_th nil)
    (m_index type-eq-decl nil pd_t_and_c_th nil)
    (patient_db_type type-eq-decl nil pd_t_and_c_th nil)
    (patient_id_line_type type-eq-decl nil pd_t_and_c_th nil)
    (p_index type-eq-decl nil pd_t_and_c_th nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (max_scan const-decl "posnat" pd_t_and_c_th nil)
    (script_db_type type-eq-decl nil pd_t_and_c_th nil)
    (script_line_type type-eq-decl nil pd_t_and_c_th nil)
    (s_index type-eq-decl nil pd_t_and_c_th nil)
    (state type-eq-decl nil pilldispenser_th nil)
    (<= const-decl "bool" reals nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (plimit const-decl "posnat" pd_t_and_c_th nil)
    (script_patient_type type-eq-decl nil pd_t_and_c_th nil)
    (list_script_type type-eq-decl nil pd_t_and_c_th nil)
    (< const-decl "bool" reals nil)
    (strict_total_order? const-decl "bool" orders nil)
    (frame_depth const-decl "posnat" pd_t_and_c_th nil)
    (even? const-decl "bool" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (dichotomous? const-decl "bool" orders nil)
    (partial_order? const-decl "bool" orders nil)
    (antisymmetric? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (trichotomous? const-decl "bool" orders nil)
    (strict_order? const-decl "bool" orders nil)
    (transitive? const-decl "bool" relations nil)
    (irreflexive? const-decl "bool" relations nil))
   nil)))

