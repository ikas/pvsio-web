% ---------------------------------------------------------------
%  Theory: emucharts_defaultProject_th
%  Author: Paolo Masci
%          Queen Mary University of London, United Kingdom
%          http://www.eecs.qmul.ac.uk/~masci/
% ---------------------------------------------------------------

main: THEORY
 BEGIN

  %-- machine states
  MachineState: TYPE = { locked, unlocked }

  %-- emuchart state
  State: TYPE = [#
    current_state: MachineState,
    previous_state: MachineState
  #]

  %-- initial state
  init(x: real): State = (#
    current_state := locked,
    previous_state := locked
  #)
  %-- utility functions
  enter_into(ms: MachineState)(st: State): State = st WITH [ current_state := ms ]
  leave_state(ms: MachineState)(st: State): State = st WITH [ previous_state := ms ]

  %-- transition functions
  per_unlock(st: State): bool = ((current_state(st) = locked)) OR ((current_state(st) = unlocked))
  unlock(st: (per_unlock)): State =
    COND
    (current_state(st) = locked)
     -> LET new_st = leave_state(locked)(st)
         IN enter_into(unlocked)(new_st),
    (current_state(st) = unlocked)
     -> LET new_st = leave_state(unlocked)(st)
         IN enter_into(locked)(new_st),
    ELSE -> st
    ENDCOND

  %-- alternative names
  click_unlock_button_red(st: State): State = unlock(st)
  click_unlock_button_green(st: State): State = unlock(st)
  click_unlock_button_silver(st: State): State = unlock(st)
  slide_unlock_button(st: State): State = unlock(st)

END main

% ---------------------------------------------------------------
%  PVS theory generated using PVSio-web PVSPrinter ver 0.1
%  Tool freely available at http://www.pvsioweb.org
% ---------------------------------------------------------------
